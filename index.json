[
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/alerts/",
	"title": "Alerts",
	"tags": null,
	"description": "",
	"content": "The alerts shortcode allows you to let information stand out by means of an alert styled box. This can be used to indicate danger, warning, success or info.\n\rI\u0026rsquo;m a danger alert\r\rI\u0026rsquo;m a warning alert\r\rI\u0026rsquo;m a success alert\r\rI\u0026rsquo;m an info alert\r\rUsage Place the following shortcode on the page Copy\r\r\r{{\u0026lt; alert style=\u0026#34;STYLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /alert \u0026gt;}} \r\r\rParameters Style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;alert-{STYLE}\u0026quot;. Bootstrap comes with four styles that can be used with this:\n danger warning success info  "
},
{
	"uri": "https://rivascf.github.io/acedemo/getting-started/",
	"title": "Getting started",
	"tags": null,
	"description": "",
	"content": "Get started with Ace docs, the easy way to generate a static website for your project\u0026rsquo;s documentation.\rInstallation and configuration is easy and can be easily applied to any project. No need to be dependent on Python, Ruby or Java. Hugo runs from a simple binary and works through the command line. Explore the following pages to learn how to build awesome documentation for your project using Ace.\nInstallation \r\rUsage \r\r\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/getting-started/installation/",
	"title": "Installation",
	"tags": null,
	"description": "",
	"content": "Installing Ace is easy. Just install the Hugo binary, create a new site and install the Ace theme.\rInstalling Hugo In order to run this theme, you need to install Hugo on your system. This theme requires Hugo\u0026rsquo;s extended version to support SCSS compilation, so make please sure you install the extended version. For more detailed information and other methods of installation you can visit the Hugo installation guide.\nThere may be other ways to install Hugo that are more applicable for your project. For example, you can use the NPM package hugo-bin to include Hugo in a project that already uses NPM packages.\nChecking your Hugo installation Run the following command in your terminal to check if Hugo is installed. Copy\r\r\rhugo version \r\r\rMake sure the version name mentions extended, to indicate you\u0026rsquo;ve installed the extended version of Hugo, which is required for this theme.\nCreating a site Create a new site docs (you may choose any name you want). In your projects root folder, run the following command: Copy\r\r\rhugo new site docs \r\r\rThis will create a new folder /docs with all required files in it.\nInstalling the theme Download and copy the theme files into /docs/themes/ace-documentation or use git to clone the repository to that directory: Copy\r\r\rcd docs cd themes git clone https://github.com/vantagedesign/ace-documentation \r\r\rAfter theme installation, the /docs/themes/ace-documentation folder should contain the file theme.toml, along with all other theme files.\nConfiguring your hugo site to use the theme Inside your site\u0026rsquo;s folder, /docs, you will find a file called config.toml. This is the configuration file for your site. Open it and configure it to use the Ace theme by setting the following value: Copy\r\r\rtheme = \u0026#34;ace-documentation\u0026#34; \r\r\rInstalling example content You can add some sample content to your site by placing the contents of the exampleSite directory in your /docs directory.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/buttons/",
	"title": "Buttons",
	"tags": null,
	"description": "",
	"content": "The button shortcode allows you to add a button to the page. This button is a HTML anchor element and can thus be used to link to another page or website.\n\rButton\r\rButton\r\rButton\r\rButton\r\rButton\r\rButton\r\rButton\r\rUsage Place the following shortcode on the page Copy\r\r\r{{\u0026lt; button style=\u0026#34;STYLE\u0026#34; link=\u0026#34;https://yourwebsite.com\u0026#34; \u0026gt;}} [content] {{\u0026lt; /button \u0026gt;}} \r\r\rParameters style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;btn-{STYLE}\u0026quot;. Bootstrap comes with a variety of styles that can be used with this:\n primary secondary danger warning success info  Each style can also be presented as an \u0026lsquo;outline\u0026rsquo; variant by prefixing the style with \u0026lsquo;outline-\u0026rsquo;. Example: style=\u0026ldquo;outline-primary\u0026rdquo;.\nlink The link parameter may consist of an URL leading to a page or other website. Simply use it by defining a URL for the button to link to. Example: link=\u0026ldquo;https://google.com\u0026rdquo;.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/configuration/",
	"title": "Configuration",
	"tags": null,
	"description": "",
	"content": "Customize and tweak Ace using a number of configuration options.\rPage ordering By default, pages are sorted on the weight assigned to them in their frontmatter. This is set in config.toml, using orderSectionsby = \u0026ldquo;weight\u0026rdquo;. Change this to \u0026ldquo;title\u0026rdquo; to sort pages alphabetically based on their title instead. Alternatively, do not assign a weight to any pages and it will also sort them alphabetically on their title.\nTable of contents By default, a table of contents (ToC) is generated for each page in the right side menu. This can be disabled using:\nCopy\r\r\r\" data-lang=\"\"\rtoc = false\r\r\r\rin the config.toml or the frontmatter (a page\u0026rsquo;s markdown file) for a page-wide or page-specific disabling of the ToC respectively.\nLogo An optional site logo can be specified:\nCopy\r\r\r\" data-lang=\"\"\rsite_logo = /logo.svg\r\r\r\rGoogle Analytics Enable Google Analytics by adding your GA tracking ID to the config.toml file, at: Copy\r\r\r\" data-lang=\"\"\rgoogleAnalytics = \u0026quot;XX-XXXXXXXXX-X\u0026quot;\r\r\r\rWhere XX-XXXXXXXXX-X is your tracking ID.\nRead more navigation In config.toml or a page\u0026rsquo;s frontmatter, set disableReadmoreNav = true to disable the prev/next buttons at the bottom of every page.\nSearch Disable search by setting disableSearch = true in config.toml.\nThe local search feature is based on the content of index.json, which is generated based on a configurable template. Search results are presented as a drop-down list attached to the search input field while typing.\nCustom CSS You can override the built-in css by using your own. Just put your own css files in the static directory of your website (the one in the theme directory also works but is not recommended) and modify the custom_css parameter in your config file. The path referenced in the parameter should be relative to the static folder. These css files will be added through the header partial after the built-in css file.\nFor example, if your css files are static/css/custom.css and static/css/custom2.css then add the following to the config file:\n [params]\rcustom_css = [\u0026quot;css/custom.css\u0026quot;,\u0026quot;css/custom2.css\u0026quot;]\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/getting-started/usage/",
	"title": "Usage",
	"tags": null,
	"description": "",
	"content": "With the site created and the theme installed, it\u0026rsquo;s time to run the server and create content.\rStarting \u0026amp; building the site Development server To start the site for development mode, execute the following command while in your /docs folder: Copy\r\r\rhugo server \r\r\rThis will start a server on your localhost that will live-update with any changes you make to your site.\nFor more Hugo commands visit https://gohugo.io/commands/\nBuilding for production To build the site for your production environment, as in, to serve it to your users through a web server, execute the following command. This will create a folder /docs/public with all the necessary files, compiled to HTML.\n\nBe sure the site\u0026rsquo;s configuration in config.toml is complete, including the baseURL = \u0026ldquo;https://yourdomain.com/\u0026quot; value to properly load stylesheets and other resources. Copy\r\r\rhugo \r\r\rCreating content Markdown Pages are written in Markdown and files defining pages should end with .md. For more information on how to use Markdown, search for tutorials on the internet or use this cheatsheet.\nFile structure Ace looks at your file structure and automatically turns it into a menu. The structure looks as follows: Copy\r\r\r\" data-lang=\"\"\r/content\r├── _index.md\r├── page-top.md\r└── /level-one\r├── _index.md\r├── page-1-one.md\r├── page-1-two.md\r└── /level-two\r├── _index.md\r├── page-2-one.md\r├── page-2-two.md\r└── /level-three\r├── _index.md\r├── page-3-one.md\r├── page-3-two.md\r└── /level-four\r├── page-4-one.md\r└── page-4-two.md\r\r\r\rYour \u0026lsquo;homepage\u0026rsquo; for every level is the _index.md file. Subpages (like page-1-one.md) are automatically added as child pages in the menu.\nAn exception exists for the top level files. /content/_index.md is your homepage, and any other page files in the /content folder are not automatically added in the menu. Instead, they can be accessed manually through their URL (yourdomain.com/page-title).\nFile contents Every file should start by defining the title and weight of the page. This can be done by adding the following text to the top of your page file. Copy\r\r\r+++ title = \u0026#34;Usage\u0026#34; description = \u0026#34;\u0026#34; weight = 2 +++ \r\r\rThe title will be displayed as a H1 header at the top of your page. The weight determines the order in the menu.\nAfter that you may write the content you desire with Markdown. You may use shortcodes to add some more \u0026lsquo;advanced\u0026rsquo; layout features to the page, such as code highlighting, a \u0026lsquo;lead\u0026rsquo; style paragraph, images, video\u0026rsquo;s, and more.\nNavigation bar menu While the left sidebar navigation is automatically populated by the file structure described above, and the right \u0026lsquo;table of contents\u0026rsquo; sidebar menu is automatically populated by the headings defined on a page, the top navigation bar needs to be configured manually. This can be done in the config.toml file, by adding the following lines: Copy\r\r\r[[menu.shortcuts]] name = \u0026#34;\u0026lt;i class=\u0026#39;fab fa-github\u0026#39;\u0026gt;\u0026lt;/i\u0026gt;\u0026#34; url = \u0026#34;https://github.com/vantagedesign/ace-documentation\u0026#34; weight = 10 \r\r\rThis example will create a GitHub icon that links to that URL. Instead of an icon, you may also use text, or both.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/childpages/",
	"title": "Childpages",
	"tags": null,
	"description": "",
	"content": "The childpages shortcode allows you to show a list of sub-pages of the current page. For example, the Getting started page of this documentation has three child pages: Installation, Configuration and Creating content. Placing the childpages shortcode in the Getting started page will place a create a list of these sub-pages in that page.\nUsage Simply place the following shortcode on the page Copy\r\r\r{{\u0026lt; childpages \u0026gt;}} \r\r\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/",
	"title": "Shortcodes",
	"tags": null,
	"description": "",
	"content": "Shortcodes are a great way to add some more advanced elements to your page. Code highlighting, a \u0026lsquo;lead\u0026rsquo; style paragraph, images, videos, and more.\rAlerts \r\rButtons \r\rChildpages \r\rCode \r\rCollapse \r\rDoublecode \r\rLead \r\rPanel \r\rTable \r\r\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/code/",
	"title": "Code",
	"tags": null,
	"description": "",
	"content": "Add code to your page with syntax highlighting and a copy button so your users can easily copy the code to their clipboard with the press of a button. The code may be entered inside the shortcode or come from an external file.\nCopy\r\r\r\u0026lt;div class=\u0026#34;mydiv bg-primary shadow text-white\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;title\u0026#34;\u0026gt;Hi there\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;I\u0026#39;m inside a code shortcode. Check out my syntax highlighting!.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \r\r\rUsage Simply place the following shortcode on the page\nCode in the shortcode Copy\r\r\r{{\u0026lt; code lang=\u0026#34;LANG\u0026#34; \u0026gt;}} [your code] {{\u0026lt; /code \u0026gt;}} \r\r\rCode from a file Copy\r\r\r{{\u0026lt; code lang=\u0026#34;LANG\u0026#34; file=\u0026#34;code/mycode.html\u0026#34; \u0026gt;}} \r\r\rParameters lang The lang parameter defines the language to be used for code highlighting. You can find a complete list of supported languages here.\nExample: lang=\u0026ldquo;html\u0026rdquo;\nfile The file parameter allows you to define an external file that contains your code to be displayed. This is done by giving a path to that file, starting from the root directory of your site. For example, a HTML file named \u0026lsquo;mycode.html\u0026rsquo; you wish to link that is in the docs/code/ directory can be defined as follows: file=\u0026ldquo;code/mycode.html\u0026rdquo;.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/collapse/",
	"title": "Collapse",
	"tags": null,
	"description": "",
	"content": "Feel like hiding some content from your visitor in a collapsible element? The collapse shortcode does exactly that. It creates a button that shows or hides the content in the shortcode on request.\nClick me to show content\r\rHi there, I'm the hidden content. Didn't see that one coming, huh?\r\r Usage Simply place the following shortcode on the page Copy\r\r\r{{\u0026lt; collapse title=\u0026#34;TITLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /collapse \u0026gt;}} \r\r\rParameters title The lang parameter defines the text to show in the button that toggles the collapse content. Example: title=\u0026ldquo;Click me to show content\u0026rdquo;.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/doublecode/",
	"title": "Doublecode",
	"tags": null,
	"description": "",
	"content": "The doublecode shortcode works the same as the code shortcode, but extends the functionality by also rendering the code in the page. This is useful for showing the code of HTML elements in your page.\nHi there\nI'm inside a doublecode shortcode, that's why I look so fancy.\n\r\r\rCopy\r\r\r\u0026lt;div class=\u0026#34;mydiv bg-primary shadow text-white p-3 m-4 border-primary\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;h4 title\u0026#34;\u0026gt;Hi there\u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;lead mb-0\u0026#34;\u0026gt;I\u0026#39;m inside a doublecode shortcode, that\u0026#39;s why I look so fancy.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \r\r\rUsage Simply place the following shortcode on the page\nCode in the shortcode Copy\r\r\r{{\u0026lt; doublecode lang=\u0026#34;LANG\u0026#34; \u0026gt;}} [your code] {{\u0026lt; /doublecode \u0026gt;}} \r\r\rCode from a file Copy\r\r\r{{\u0026lt; doublecode lang=\u0026#34;LANG\u0026#34; file=\u0026#34;code/mycode.html\u0026#34; \u0026gt;}} \r\r\rParameters lang The lang parameter defines the language to be used for code highlighting. You can find a complete list of supported languages here.\nExample: lang=\u0026ldquo;html\u0026rdquo;\nfile The file parameter allows you to define an external file that contains your code to be displayed. This is done by giving a path to that file, starting from the root directory of your site. For example, a HTML file named \u0026lsquo;mycode.html\u0026rsquo; you wish to link that is in the docs/code/ directory can be defined as follows: file=\u0026ldquo;code/mycode.html\u0026rdquo;.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/lead/",
	"title": "Lead",
	"tags": null,
	"description": "",
	"content": "The lead shortcode creates a paragraph with the lead class to make it stand out. Great for introductions or summaries.\nI\u0026rsquo;m a lead paragraph. That means I\u0026rsquo;m more important. And you can see that.\rUsage Simply place the following shortcode on the page Copy\r\r\r{{\u0026lt; lead \u0026gt;}} [content] {{\u0026lt; /lead \u0026gt;}} \r\r\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/panel/",
	"title": "Panel",
	"tags": null,
	"description": "",
	"content": "Draw your visitor\u0026rsquo;s attention by separating information from the rest of the page using a panel. Convey meaning to this information by using colors implying danger, warning, success or info in a similar fashion as alerts.\nI\u0026#39;m important\r\rBe sure to read me, I might have important information for you.\r\r\r\rUsage Simply place the following shortcode on the page Copy\r\r\r{{\u0026lt; panel title=\u0026#34;TITLE\u0026#34; style=\u0026#34;STYLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /panel \u0026gt;}} \r\r\rParameters Style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;border-{STYLE}\u0026quot;. Bootstrap comes with a variety of styles that can be used with this:\n primary secondary danger warning success info Example: style=\u0026ldquo;danger\u0026rdquo;.  Title The title parameter defines the text shown as a title in the panel. It will have the same color as the style. Example: title=\u0026ldquo;I\u0026rsquo;m important\u0026rdquo;.\n"
},
{
	"uri": "https://rivascf.github.io/acedemo/",
	"title": "Ace documentation",
	"tags": null,
	"description": "",
	"content": "Ace is a theme for Hugo, a fast static website generator written in Go, that allows you to easily write well organized and clean documentation for your projects. It\u0026rsquo;s as easy as writing your content in Markdown, running Hugo to generate static HTML, CSS and Javascript files and deploying those to your web server.\rFeatures \r\rFast.\r\rStatic files generated in less than a second. And served to your visitors just as fast.\r\r\r\r\r\rMinimalistic.\r\rA clean look to keep your user's attention to the content that matters: your documentation.\r\r\r\r\r\rFor every project.\r\rHugo does not require Java, Python or Ruby and is available as a simple binary or through NPM and other package managers.\r\r\r\r\r\rAutomatic.\r\rFolders and files are automatically added in the menu depending on your file and folder structure.\r\r\r\r\r\rFull search.\r\rEasily find the content you look for through the search function.\r\r\r\r\r\rCode highlighting.\r\rCode highlighting. Include code samples with a copy button. If it’s HTML, you can also render the code.\r\r\r\r\r\rUseful shortcodes.\r\rCode, buttons, alerts, leads, collapse, panels, images, videos and more.\r\r\r\r\r\rBuilt with Bootstrap.\r\rBuilt with Bootstrap 4. Fully responsive out of the box. Build and style page elements using Bootstrap.\r\r\r\r\r\rIcons.\r\rPacked with Font Awesome. Empower your content with a shit ton of awesome icons.\r\r\r\r\r"
},
{
	"uri": "https://rivascf.github.io/acedemo/categories/",
	"title": "Categories",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "https://rivascf.github.io/acedemo/shortcodes/table/",
	"title": "Table",
	"tags": null,
	"description": "",
	"content": "The table shortcode allows you to wrap your tables in a table class, providing styling to the table such as borders, stripes and hover effects.\n   Tables are cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1    \rUsage Place the following shortcode on the page Copy\r\r\r{{\u0026lt; table style=\u0026#34;STYLE\u0026#34; \u0026gt;}} | Tables | are | cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | {{\u0026lt; /table \u0026gt;}} \r\r\rParameters Style The style parameter is directly applied to the table as a class in the format \u0026quot;{STYLE}\u0026quot;. Bootstrap comes with several styles that can be used with this:\n table-striped table-dark table-bordered table-hover  "
},
{
	"uri": "https://rivascf.github.io/acedemo/tags/",
	"title": "Tags",
	"tags": null,
	"description": "",
	"content": ""
}]
